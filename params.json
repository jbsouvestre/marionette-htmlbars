{"name":"Marionette-htmlbars","tagline":"An experiment to make Marionette.js work with HTMLBars","body":"# Marionette HTMLBars\r\n\r\nThis is an experiment to make Marionette work with HTMLBars.\r\n\r\n## Features\r\n\r\n- Lazy efficient rerendering \r\n\r\n```\r\nlet View = HTMLBarsView.extend({\r\n    collectionEvents: {\r\n        'sort': 'render'\r\n    } \r\n});\r\n```\r\n\r\n- Region autobinding *[Partially working]*\r\n\r\n```<div {{region name=\"regionName\"}}></div>``` \r\n```\r\nlet View = HTMLBarsView.extend({\r\n    onRender() {\r\n        this.showChildView('regionName', new OtherView());\r\n    }\r\n});\r\n```\r\n\r\n- Actions autobinding \r\n\r\n```<button {{action \"click\" \"remove\"}}>Remove item</button>``` \r\n\r\n```\r\nlet View = HTMLBarsView.extend({\r\n    remove() {\r\n        this.model.remove();\r\n    } \r\n});\r\n```\r\n\r\n\r\n- UI Autobinding \r\n\r\n```<section {{ui \"sectionElement\"}}>My Element</section>```\r\n```\r\nlet View = HTMLBarsView.extend({\r\n    onSomeTrigger() {\r\n        this.ui.sectionElemnt.toggle();\r\n    }\r\n});\r\n```\r\n\r\n## Demo\r\n    npm install\r\n    npm run build\r\n    live-server\r\n\r\nNavigate to 127.0.0.1:8080 ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}